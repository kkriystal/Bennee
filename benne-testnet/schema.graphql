type Borrowed @entity(immutable: true) {
  id: Bytes!
  by: Bytes! # address
  borrowIndex: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type CancelledRequest @entity(immutable: true) {
  id: Bytes!
  by: Bytes! # address
  borrowIndex: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type CancelledSupply @entity(immutable: true) {
  id: Bytes!
  lender: Bytes! # address
  borrower: Bytes! # address
  borrowIndex: BigInt! # uint256
  cancelAmount: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type DefaultWithdraw @entity(immutable: true) {
  id: Bytes!
  by: Bytes! # address
  borrowIndex: BigInt! # uint256
  borrower: Bytes! # address
  amount: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type FxRateUpdated @entity(immutable: true) {
  id: Bytes!
  scheduler: Bytes! # address
  fxRate: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type FxSchedulerUpdated @entity(immutable: true) {
  id: Bytes!
  oldFxScheduler: Bytes! # address
  newFxScheduler: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type OwnershipTransferStarted @entity(immutable: true) {
  id: Bytes!
  previousOwner: Bytes! # address
  newOwner: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type OwnershipTransferred @entity(immutable: true) {
  id: Bytes!
  previousOwner: Bytes! # address
  newOwner: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type Repaid @entity(immutable: true) {
  id: Bytes!
  borrower: Bytes! # address
  borrowerIndex: BigInt! # uint256
  repayAmount: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type Requested @entity(immutable: true) {
  id: Bytes!
  user: Bytes! # address
  index: BigInt! # uint256
  amount: BigInt! # uint256
  tenure: BigInt! # uint256
  interestRate: BigInt! # uint256
  repaymentWIndow: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type SignerUpdated @entity(immutable: true) {
  id: Bytes!
  oldSigner: Bytes! # address
  newSigner: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type Supplied @entity(immutable: true) {
  id: Bytes!
  lender: Bytes! # address
  lendAmount: BigInt! # uint256
  borrower: Bytes! # address
  borrowIndex: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type Withdraw @entity(immutable: true) {
  id: Bytes!
  by: Bytes! # address
  borrowIndex: BigInt! # uint256
  borrower: Bytes! # address
  amount: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}
